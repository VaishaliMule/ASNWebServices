@model ASNTechnosoft.Models.InstituteRegistration
@{
    Layout = null;
}

<!DOCTYPE html>

<html lang="en">
<!--begin::Head-->
<head>
    <base href="../../../../">
    <meta charset="utf-8" />
    <title>ASN Technosoft | Sign Up</title>
    <meta name="description" content="Singin page example" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <!--begin::Fonts-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Poppins:300,400,500,600,700" />
    <!--end::Fonts-->
    <!--begin::Page Custom Styles(used by this page)-->
    <link href="/Content/dist/assets/css/pages/login/login-3.css?v=7.0.4" rel="stylesheet" type="text/css" />
    <!--end::Page Custom Styles-->
    <!--begin::Global Theme Styles(used by all pages)-->
    <link href="/Content/dist/assets/plugins/global/plugins.bundle.css?v=7.0.4" rel="stylesheet" type="text/css" />
    <link href="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.css?v=7.0.4" rel="stylesheet" type="text/css" />
    <link href="/Content/dist/assets/css/style.bundle.css?v=7.0.4" rel="stylesheet" type="text/css" />
    <!--end::Global Theme Styles-->
    <!--begin::Layout Themes(used by all pages)-->
    <!--end::Layout Themes-->
    <link rel="shortcut icon" href="/Content/dist/assets/media/logos/ASNLogo.jpg" />

</head>
<!--end::Head-->
<!--begin::Body-->
<body id="kt_body" class="header-fixed header-mobile-fixed subheader-enabled page-loading">
    <!--begin::Main-->
    <div class="d-flex flex-column flex-root">
        <!--begin::Login-->
        <div class="login login-3 wizard d-flex flex-column flex-lg-row flex-column-fluid wizard" id="kt_login">
            <!--begin::Aside-->
            <div class="login-aside d-flex flex-column flex-row-auto">
                <!--begin::Aside Top-->
                <div class="d-flex flex-column-auto flex-column pt-0 px-30">
                    <!--begin::Aside header-->
                    <a href="#" class="text-center">
                        <img src="/Content/dist/assets/media/logos/ASNLogo.jpg" class="max-h-75px" alt="" />
                    </a>
                    <!--end::Aside header-->
                    <!--begin: Wizard Nav-->
                    <div class="wizard-nav pt-5 pt-lg-5">
                        <!--begin::Wizard Steps-->
                        <div class="wizard-steps">
                            <!--begin::Wizard Step 1 Nav-->
                            <div class="wizard-step" data-wizard-type="step" data-wizard-state="current">
                                <div class="wizard-wrapper">
                                    <div class="wizard-icon">
                                        <i class="wizard-check ki ki-check"></i>
                                        <span class="wizard-number">1</span>
                                    </div>
                                    <div class="wizard-label">
                                        <h3 class="wizard-title">Personal Details</h3>
                                        <div class="wizard-desc">Setup Your Personal Details</div>
                                    </div>
                                </div>
                            </div>
                            <!--end::Wizard Step 1 Nav-->
                            <!--begin::Wizard Step 2 Nav-->
                            <div class="wizard-step" data-wizard-type="step" data-wizard-state="pending">
                                <div class="wizard-wrapper">
                                    <div class="wizard-icon">
                                        <i class="wizard-check ki ki-check"></i>
                                        <span class="wizard-number">2</span>
                                    </div>
                                    <div class="wizard-label">
                                        <h3 class="wizard-title">Verification</h3>
                                        <div class="wizard-desc">Setup Mobile and Email OTP Verification</div>
                                    </div>
                                </div>
                            </div>
                            <!--end::Wizard Step 2 Nav-->
                            <!--begin::Wizard Step 3 Nav-->
                            <div class="wizard-step" data-wizard-type="step" data-wizard-state="pending">
                                <div class="wizard-wrapper">
                                    <div class="wizard-icon">
                                        <i class="wizard-check ki ki-check"></i>
                                        <span class="wizard-number">3</span>
                                    </div>
                                    <div class="wizard-label">
                                        <h3 class="wizard-title">Review and Submit</h3>
                                        <div class="wizard-desc">Review and Submit</div>
                                    </div>
                                </div>
                            </div>
                            <!--end::Wizard Step 3 Nav-->
                            <!--begin::Wizard Step 4 Nav-->
                            <div class="wizard-step" data-wizard-type="step" data-wizard-state="pending">
                                <div class="wizard-wrapper">
                                    <div class="wizard-icon">
                                        <i class="wizard-check ki ki-check"></i>
                                        <span class="wizard-number">4</span>
                                    </div>
                                    <div class="wizard-label">
                                        <h3 class="wizard-title">Completed!</h3>
                                        <div class="wizard-desc">Review and Submit</div>
                                    </div>
                                </div>
                            </div>
                            <!--end::Wizard Step 4 Nav-->
                        </div>
                        <!--end::Wizard Steps-->
                    </div>
                    <!--end: Wizard Nav-->

                    <div class="aside-img-wizard d-flex flex-row-fluid bgi-no-repeat bgi-position-y-bottom bgi-position-x-center" style=" background-image: url(/Content/dist/assets/media/bg/software.jpg)"></div>


                </div>

            </div>
            <!--begin::Aside-->
            <!--begin::Content-->
            <div class="login-content flex-column-fluid d-flex flex-column p-8">

                <!--begin::Wrapper-->
                <div class="d-flex flex-row-fluid flex-center">

                    <!--begin::Signin-->
                    <div class="login-form login-form-signup">
                        <!--begin::Form-->
                        @using (Html.BeginForm("PersonalDetails", "Account", FormMethod.Post, new { @id = "registerform" }))
                        {
                            @Html.AntiForgeryToken()
                            <!--begin: Wizard Step 1-->
                            <div class="pb-5" data-wizard-type="step-content" data-wizard-state="current">
                                <!--begin::Title-->
                                <div class="pb-5 pb-lg-10">
                                    <h3 class="font-weight-bolder text-dark display5">Create Account</h3>
                                    <div class="text-muted font-weight-bold font-size-h5">
                                        Already have an Account ?
                                        @Html.ActionLink("Sign-In", "Login")
                                    </div>

                                </div>

                                <!--begin::Title-->

                                <div class="form-group">
                                    @Html.LabelFor(model => model.InstituteName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                    @Html.EditorFor(model => model.InstituteName, new { htmlAttributes = new { @class = "form-control h-auto py-3 px-4 border-0 rounded-lg font-size-h6", placeholder = "Enter Center Name", autocomplete = "off", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.InstituteName, "", new { @class = "text-danger" })
                                </div>

                                <!--begin::Form Group-->
                                <div class="form-group">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control h-auto py-3 px-4 border-0 rounded-lg font-size-h6", placeholder = "Enter First Name", autocomplete = "off", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                                <!--end::Form Group-->
                                <!--begin::Form Group-->
                                <div class="form-group">
                                    @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control h-auto py-3 px-4 border-0 rounded-lg font-size-h6", placeholder = "Enter Middle Name", autocomplete = "off", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control h-auto py-3 px-4 border-0 rounded-lg font-size-h6", placeholder = "Enter Last Name", autocomplete = "off", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control h-auto py-3 px-4 border-0 rounded-lg font-size-h6", id = "txtEmail", placeholder = "Enter your Valid Email for verification", autocomplete = "off", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger", id = "emailerror" })

                                </div>

                                <!--end::Form Group-->
                                <div class="form-group">

                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control h-auto py-3 px-4 border-0 rounded-lg font-size-h6 mobile-valid", placeholder = "Enter Your Mobile number for verification", @id = "mobile", @autocomplete = "off-1" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger", id = "mobilemessage" })

                                </div>

                                <div class="row">
                                    <div class="row col-md-10">

                                    </div>
                                    <div class="row col-md-2">

                                        <div class="col-md-offset-6 col-md-6">
                                            <input type="submit" name="nextBtn" id="nextBtn" value='Next' class="btn btn-primary font-weight-bolder text-uppercase px-9 py-4" />
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <!--end: Wizard Step 1-->
                        }
                    </div>

                    <!--end::Signin-->
                </div>
                <!--end::Wrapper-->
            </div>
            <!--end::Content-->
        </div>
        <!--end::Login-->
    </div>
    <div class="footer bg-white py-4 d-flex flex-lg-column" id="kt_footer">
        <!--begin::Container-->
        <div class="container d-flex flex-column flex-md-row align-items-center justify-content-between">
            <!--begin::Copyright-->
            <div class="text-dark order-2 order-md-1">
                <span class="text-muted font-weight-bold mr-2">2021©</span>
                <a href="http://asntechnosoft.com/" target="_blank" class="text-dark-75 text-hover-primary">ASN Technosoft Pvt. Ltd.</a>
            </div>
            <!--end::Copyright-->
            <!--begin::Nav-->
            <div class="nav nav-dark order-1 order-md-2">
                <a href='@Url.Action("About","Home")' target="_blank" class="nav-link pr-3 pl-0">About</a>

                <a href='@Url.Action("Contact","Home")' target="_blank" class="nav-link pl-3 pr-0">Contact</a>
            </div>
            <!--end::Nav-->
        </div>
        <!--end::Container-->
    </div>


    <script src="/Content/dist/assets/plugins/global/plugins.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/js/scripts.bundle.js?v=7.0.4"></script>

    <!--begin::Page Scripts(used by this page)-->
    <script src="/Content/dist/assets/js/pages/custom/login/login-3.js?v=7.0.4"></script>
    <script>
        $('.mobile-valid').on('keypress', function (e) {
            var $this = $(this);
            var regex = new RegExp("^[0-9\b]+$");//^[0-9\b]+$
            var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
            // for 10 digit number only
            if ($this.val().length > 9) {
                e.preventDefault();
                return false;
            }
            if (e.charCode < 54 && e.charCode > 47) {
                if ($this.val().length == 0) {
                    e.preventDefault();
                    return false;
                } else {
                    return true;
                }

            }
            if (regex.test(str)) {
                return true;
            }
            e.preventDefault();
            return false;
        });
        $("#mobile").on("blur", function () {
            var mobNum = $(this).val();
            if (mobNum.length != 10) {
                $('#mobilemessage').html('Invalid Mobile Number');
                $('#mobilemessage').css('color', 'red');
                return false;
            }
            else {
                $('#mobilemessage').html(' ');
            }
        });

        $('#txtEmail').on('keypress', function () {
            var re = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/.test(this.value);
            if (!re) {
                $('#emailerror').html("Invalid email address!");
            } else {
                $('#emailerror').html("");
            }
        });

    </script>
    <script language="javascript">
        $("#txtEmail").change(function () {
            $.ajax({
                type: "POST",
                url: "Account/ExistOrNot",
                data: { Email: $('#txtEmail').val() },
                dataType: "JSON",
                success: function (response) {
                    if (response.d !== "0" || !isEmpty(response)) {
                        Swal.fire("Oops!", "Institute with Email Id " + $('#txtEmail').val() + " is already exists! ", "error");
                        $("#nextBtn").prop('disabled', true);
                        return false;
                    }
                },
                error: function () {
                    $('#nextBtn').prop('disabled', false);
                }
            });
        });
    </script>


    <script type="text/javascript">
        $('#FirstName').bind('keyup blur', function () {
            var node = $(this);
            node.val(node.val().replace(/[^a-zA-Z ]/g, ''));//"[A-Za-z ]*"
        }
        );
        $('#MiddleName').bind('keyup blur', function () {
            var node = $(this);
            node.val(node.val().replace(/[^a-zA-Z ]/g, ''));
        }
        );
        $('#LastName').bind('keyup blur', function () {
            var node = $(this);
            node.val(node.val().replace(/[^a-zA-Z ]/g, ''));
        }
        );
    </script>

    <script>
        var KTFormControls = function () {
            var _initDemo1 = function () {
                FormValidation.formValidation(
                    document.getElementById('registerform'),
                    {
                        fields: {
                            Email: {
                                validators: {
                                    notEmpty: {
                                        message: 'Email is required'
                                    },
                                    emailAddress: {
                                        message: 'The value is not a valid email address'
                                    }
                                }
                            },
                            InstituteName: {
                                validators: {
                                    notEmpty: {
                                        message: 'Institute name is required'
                                    }
                                }
                            },
                            FirstName: {
                                validators: {
                                    notEmpty: {
                                        message: 'First name is required'
                                    }
                                }
                            },
                            //MiddleName: {
                            //    validators: {
                            //        notEmpty: {
                            //            message: 'Middle name is required'
                            //        }
                            //    }
                            //},
                            LastName: {
                                validators: {
                                    notEmpty: {
                                        message: 'Last name is required'
                                    }
                                }
                            },
                            Mobile: {
                                validators: {
                                    notEmpty: {
                                        message: 'Mobile number is required'
                                    }
                                }
                            }
                        },

                        plugins: {
                            trigger: new FormValidation.plugins.Trigger(),
                            // Validate fields when clicking the Submit button
                            submitButton: new FormValidation.plugins.SubmitButton(),
                            // Submit the form when all fields are valid
                            defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
                            // Bootstrap Framework Integration
                            bootstrap: new FormValidation.plugins.Bootstrap({
                                eleInvalidClass: '',
                                eleValidClass: '',
                            })
                        }
                    }
                );
            }
            return {
                // public functions
                init: function () {
                    _initDemo1();
                }
            };
        }();
        jQuery(document).ready(function () {
            KTFormControls.init();
        });
    </script>
</body>
<!--end::Body-->
</html>


