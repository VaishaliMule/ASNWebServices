@model TechnosoftModel.SubscriptionService


@{
    Layout = null;
}


<!DOCTYPE html>

<html lang="en">
<!--begin::Head-->
<head>
    <style>
        .required::after {
            content: " *";
            font-weight: bold;
            color: red;
        }
    </style>
</head>
<!--end::Head--><!--end::Head-->
<!--begin::Body-->
<body>
    <div class="modal-dialog modal-lg modal-xl modal-dialog-scrollable" role="document" id="createStaff">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Update Service</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <i aria-hidden="true" class="ki ki-close"></i>
                </button>
            </div>
            <div class="modal-body">
                <div class="row justify-content-center my-10 px-8 my-lg-15 px-lg-10">
                    <div class="col-xl-12 col-xxl-10">
                      
                        @using (Html.BeginForm("Edit", "Services", FormMethod.Post, new { @class = "form", role = "form", id = "editForm",enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                          
                            <div class="row">
                                <div class="col-xl-6">
                                
                                    @Html.HiddenFor(model => model.Id)
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.ServiceName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-4 col-sm-12 required" })
                                        @Html.EditorFor(model => model.ServiceName, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter Service name", autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.ServiceName, "", new { @class = "text-danger" })
                                    </div>
                                 
                                </div>

                                

                                <div class="col-xl-6">
                               
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.ServiceAmount, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-4 col-sm-12 required" })
                                        @Html.EditorFor(model => model.ServiceAmount, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter Service amount", autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.ServiceAmount, "", new { @class = "text-danger" })
                                    </div>
                                 
                                </div>

                            </div>

                            <div class="row">

                                <div class="col-xl-6">
                                
                                    <div class="form-group row">
                                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-4 col-sm-12 required" })
                                        @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter quantity", autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </div>
                                
                                </div>
                                <div class="col-xl-6">
                                 
                                    <div class="form-group row">

                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-4 col-sm-12 required" })
                                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter Your Description", @autocomplete = "off" } })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                                    </div>
                                  
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-xl-6">
                                    <div class="form-group row">
                                        <div class="col-xl-6">

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Logo, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark" })
                                                <div class="col-md-10">
                                                    <div class="image-input image-input-empty image-input-outline" id="kt_image_5" style="background-image: url(/Content/dist/assets/media/users/blank.png) ">
                                                        @if (Model.Logo != null)
                                                        {
                                                            <div class="image-input-wrapper w-lg-250px h-lg-175px" style="background-image: url('/ServiceLogo/@Model.LogoFileName')"></div>
                                                        }
                                                        else
                                                        {
                                                            <div class="image-input-wrapper w-lg-250px h-lg-175px" style="background-image: url(/Content/dist/assets/media/users/blank.png)"></div>
                                                        }

                                                        <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change Photo">
                                                            <i class="fa fa-pen icon-sm text-muted"></i>
                                                            <input type="file" name="PhotoImageFile" accept=".png, .jpg, .jpeg" />
                                                            <input type="hidden" name="profile_avatar_remove" />
                                                        </label>

                                                        <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="cancel" data-toggle="tooltip" title="Cancel Photo">
                                                            <i class="ki ki-bold-close icon-xs text-muted"></i>
                                                        </span>

                                                        <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="remove" data-toggle="tooltip" title="Remove Photo">
                                                            <i class="ki ki-bold-close icon-xs text-muted"></i>
                                                        </span>
                                                    </div>

                                                </div>
                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>

                           
                            <div class="d-flex justify-content-between border-top mt-5 pt-10">

                                <div>
                                    <input type="submit" id="btnSubmit" value="Update" name="btnSubmit" class="btn btn-primary font-weight-bold text-uppercase px-9 py-4" />

                                </div>
                            </div>
                          
                        }
                     </div>
                </div>
            </div>

        </div>
    </div>
    <script>
        var KTFormControls = function () {

            // Private functions
            var _initDemo1 = function () {
                (FormValidation.formValidation(
                    document.getElementById('editForm'),
                    {
                       fields: {

                           
                            ServiceName: {
                                validators: {
                                    notEmpty: {
                                        message: 'Service name is required'
                                    }
                                }
                            },

                            ServiceAmount: {
                                validators: {
                                    notEmpty: {
                                        message: 'Service amount is required'
                                    }
                                }
                            },

                             Quantity: {
                                validators: {
                                    notEmpty: {
                                        message: 'Quantity is required'
                                    }
                                }
                            },
                            Description: {
                                validators: {
                                    notEmpty: {
                                        message: 'Please enter Description text'
                                    },
                                    stringLength: {
                                        min: 1,
                                        max: 100,
                                        message: 'Please enter a menu within text length range 1 and 100'
                                    }
                                }
                            },
                           
                        },

                        plugins: { //Learn more: https://formvalidation.io/guide/plugins
                            trigger: new FormValidation.plugins.Trigger(),
                            // Bootstrap Framework Integration
                            bootstrap: new FormValidation.plugins.Bootstrap(),
                            // Validate fields when clicking the Submit button
                            submitButton: new FormValidation.plugins.SubmitButton(),
                            // Submit the form when all fields are valid
                            defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
                        }
                    }
                ));
            }

            return {
                // public functions
                init: function () {
                    _initDemo1();
                }
            };
        }();

        jQuery(document).ready(function () {
            KTFormControls.init();
        });
    </script>

    <script>
        $("#ServiceName").change(function () {
            $.ajax({
                type: "POST",
                url: "../Services/ExistOrNot",
                data: { servicename: $('#ServiceName').val() },
                dataType: "JSON",
                success: function (response) {
                    if (response.d !== "0" || !isEmpty(response)) {
                        Swal.fire("Oops!", "Service name already exists!", "error");
                        $("#btnSubmit").prop('disabled', true);
                    } else {
                        $("#btnSubmit").prop('disabled', false);
                    }
                },
                error: function () {
                    $('#btnSubmit').prop('disabled', false);
                }
            });

        });

       var avatar5 = new KTImageInput('kt_image_5');
    </script>



</body>

<!--end::Body-->
</html>


