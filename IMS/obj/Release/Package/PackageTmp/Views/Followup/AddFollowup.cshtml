@model IMS.Models.FollowupModel
@{
    ViewBag.Title = "AddFollowup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <html lang="en">
    <!--begin::Head-->
    <head>
       

        <style>
            tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            #ddlreason {
                display: none;
            }

            #dvreason {
                display: none;
            }
            .required::after {
            content: " *";
            font-weight: bold;
            color: red;
        }
        </style>
    </head>
    <!--end::Head--><!--end::Head-->
    <!--begin::Body-->

    <body id="kt_body" class="header-fixed header-mobile-fixed subheader-enabled page-loading">
        <div class="subheader py-1 py-lg-2 subheader-transparent" id="kt_subheader">
            <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
                <!--begin::Info-->
                <div class="d-flex align-items-center flex-wrap mr-1">
                    <!--begin::Page Heading-->
                    <div class="d-flex align-items-baseline mr-5">
                        <!--begin::Page Title-->
                        <h5 class="text-dark font-weight-bold my-2 mr-5">Admission</h5>
                        <!--end::Page Title-->
                        <!--begin::Breadcrumb-->
                        <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                            <li class="breadcrumb-item">
                                <a href="" class="text-muted">Enquiry Followup</a>
                            </li>
                            <li class="breadcrumb-item">
                                <a class="text-muted">Add Followup</a>
                            </li>
                        </ul>
                        <!--end::Breadcrumb-->
                    </div>
                    <!--end::Page Heading-->
                </div>
                <!--end::Info-->

            </div>
        </div>
        <div class="container">

            <!--begin::Card-->
            <div class="card">
                <div class="card-header flex-wrap border-0 pt-6 pb-0">
                    <div class="card-title">
                        <h3 class="card-label">
                            Add Enquiry Followup
                        </h3>
                    </div>

                </div>
                <div class="card-body">
                    <!--begin: Datatable table table-bordered table-checkable dataTable no-footer -->
                    @using (Html.BeginForm("AddFollowup", "Followup", FormMethod.Post, new { @id = "CreateForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.InstituteId)
                        @Html.HiddenFor(model => model.EnquiryId)
                        @Html.HiddenFor(model => model.StudentId)
                        @Html.HiddenFor(model => model.StaffId)
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.DisplayFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "Name", @readonly = "readonly", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.DisplayFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 seconddate", id = "CourseName", @readonly = "readonly", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.DisplayFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "Mobile", @readonly = "readonly", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.ParentMobile, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.DisplayFor(model => model.ParentMobile, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 seconddate", id = "ParentMobile", @readonly = "readonly", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.ParentMobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DOEnquiry, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.DisplayFor(model => model.DOEnquiry, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "DOEnquiry", @readonly = "readonly", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.DOEnquiry, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.FollowupDate, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.FollowupDate, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 seconddate", id = "FollowupDate", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.FollowupDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.FollowUpComment, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.FollowUpComment, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "FollowUpComment", autocomplete = "off", required = "required" } })
                                    @Html.ValidationMessageFor(model => model.FollowUpComment, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.NextFollowupDate, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.NextFollowupDate, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 seconddate", id = "NextFollowupDate", autocomplete = "off",required="required" } })
                                    @Html.ValidationMessageFor(model => model.NextFollowupDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Interested, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    <span class="switch">
                                        <label>
                                            <input type="checkbox" name="Interested" id="Interested" />
                                            <span></span>
                                        </label>
                                    </span>
                                    @*@Html.CheckBox("Interested", false, htmlAttributes: new { @class = "switch" })*@
                                    @Html.ValidationMessageFor(model => model.Interested, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6" id="dvreason">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Rejectionreasons, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.DropDownListFor(model => model.RejectionReasonId, new SelectList(Model.Rejectionreasons, "Value", "Text"), "--Select Course Type--", new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "ddlreason", name = "ddlreason" })
                                    @Html.ValidationMessageFor(model => model.Rejectionreasons, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-between border-top mt-5 pt-10">
                            <div>
                                <input type="submit" id="btnSubmit" value="Save" name="btnSubmit" class="btn btn-primary font-weight-bold text-uppercase px-9 py-4" />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="@Url.Action("Index","Followup")" id="backLink" class="btn btn-bg-danger font-weight-bold text-uppercase px-9 py-4">Cancel</a>
                            </div>
                        </div>
                        <div class="separator separator-dashed my-5"></div>
                    }
                </div>
            </div>
            <!--end::Card-->
        </div>
       
      
        <script src="/Content/dist/assets/plugins/global/plugins.bundle.js?v=7.0.4"></script>
        <script src="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.js?v=7.0.4"></script>
        <script src="/Content/dist/assets/js/scripts.bundle.js?v=7.0.4"></script>
     
        <script src="/Content/dist/assets/js/pages/crud/forms/validation/form-controls.min.js"></script>
        <script src="/Content/dist/assets/js/pages/features/miscellaneous/sweetalert2.js?v=7.0.4"></script>
        <script type="text/javascript">
            $('#FollowupDate').datepicker({
                rtl: KTUtil.isRTL(),
                todayHighlight: true,
                orientation: "bottom left",
                autoclose: true
             //   dateFormat: 'MM/dd/yyyy'
            });
            $('#NextFollowupDate').datepicker({
                rtl: KTUtil.isRTL(),
                todayHighlight: true,
                orientation: "bottom left",
                autoclose: true

            });
        </script>
        @*<script type="text/javascript">
            $(document).on('click', '#backLink', function () {
                history.go(-1);
            });
        </script>*@
        <script>
            $('#Interested').click(function () {
                if (this.checked) {
                    $('#dvreason').show("fast");
                    $('#ddlreason').show("fast");
                     $('#ddlreason').attr('required',true);
                }
                else {
                    $('#dvreason').hide("fast");
                    $('#ddlreason').hide("fast");
                    $('#ddlreason').attr('required', false);
                }

            });
        </script>
        <script type="text/javascript">
            history.pushState(null, null, location.href);
            window.onpopstate = function () {
                history.go(1);
            };
        </script>
    </body>

    <!--end::Body-->
    </html>
