@model IMS.Models.StudentModel
@{
    ViewBag.Title = "FeesReceipt";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html lang="en">
<!--begin::Head-->
<head>

    
    <style>
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        .required::after {
            content: " *";
            font-weight: bold;
            color: red;
        }
    </style>
    
</head>
<!--end::Head--><!--end::Head-->
<!--begin::Body-->

<body style="overflow:scroll">
    <div class="subheader py-1 py-lg-2 subheader-transparent" id="kt_subheader">
        <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-1">
                <!--begin::Page Heading-->
                <div class="d-flex align-items-baseline mr-5">
                    <!--begin::Page Title-->
                    <h5 class="text-dark font-weight-bold my-2 mr-5">Admission</h5>
                    <!--end::Page Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                        <li class="breadcrumb-item">
                            <a class="text-muted">Search for Fees Receipt</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a class="text-muted">Fees Receipt</a>
                        </li>
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page Heading-->
            </div>
            <!--end::Info-->

        </div>
    </div>
    <div class="container">
        <!--begin::Card-->
        <div class="card">
            <div class="card-header flex-wrap border-0 pt-6 pb-0">
                <div class="card-title">
                    <h3 class="card-label">
                        Fees Receipt
                    </h3>
                </div>

            </div>
            <div class="card-body">
                <!--begin: Datatable table table-bordered table-checkable dataTable no-footer -->
                @using (Html.BeginForm("FeesReceipt", "Admission", FormMethod.Post, new { @id = "CreateForm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.InstituteId)
                    @Html.HiddenFor(model => model.BatchId)
                    @Html.HiddenFor(model => model.AdmissionId)
                    <div class="row">
                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.NameOnCertificate, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                @Html.DisplayFor(model => model.NameOnCertificate, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @readonly = "readonly", id = "Name" } })
                                @Html.ValidationMessageFor(model => model.NameOnCertificate, "", new { @class = "text-danger" })
                            </div>
                            <!--end::Input-->
                        </div>

                        <div class="col-xl-6">
                            <div class="form-group row">

                                @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                @Html.DisplayFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "courseName", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })

                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.BatchName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                @Html.DisplayFor(model => model.BatchName, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @readonly = "readonly", id = "batchName" } })
                                @Html.ValidationMessageFor(model => model.BatchName, "", new { @class = "text-danger" })
                            </div>
                            <!--end::Input-->
                        </div>
                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.TotalFees, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                <div class="totalFeesClass">
                                    @Html.DisplayFor(model => model.TotalFees, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @readonly = "readonly", id = "totalfees", autocomplete = "off" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.TotalFees, "", new { @class = "text-danger" })
                            </div>
                            @Html.HiddenFor(model => model.TotalFees)
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.TotalPaidFees, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                @Html.DisplayFor(model => model.TotalPaidFees, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @readonly = "readonly", id = "TotalPaidFees", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.TotalPaidFees, "", new { @class = "text-danger" })
                            </div>
                            @Html.HiddenFor(model => model.TotalPaidFees)
                        </div>
                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.BalanceAmount, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                <div class="balanceamountClass">
                                    @Html.DisplayFor(model => model.BalanceAmount, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @readonly = "readonly", id = "balanceamount", autocomplete = "off" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.BalanceAmount, "", new { @class = "text-danger" })
                            </div>
                            @Html.HiddenFor(model => model.BalanceAmount)
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Paid, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                @Html.EditorFor(model => model.Paid, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "paidamount", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Paid, "", new { @class = "text-danger" })
                            </div>
                            <!--end::Input-->
                        </div>

                        <div class="col-xl-6">
                            <!--begin::Input-->
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "discount", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
                            </div>
                            <!--end::Input-->
                        </div>


                    </div>
                    <div class="row">
                        <div class="col-xl-6">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.ModeOfPayment, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                @Html.DropDownListFor(model => model.ModeOfPayment, new List<SelectListItem>{
                    new SelectListItem(){ Text = "Cash", Value = "1"},
                    new SelectListItem(){ Text = "Online", Value = "2"}
                    //new SelectListItem(){ Text = "Cheque Payment", Value = "3"}
                    }, "--Select mode of Payment--", new { @id = "slct", @class = "form-control col-lg-6 col-md-9 col-sm-12", name = "slct", required = "required" })
                                @Html.ValidationMessageFor(model => model.ModeOfPayment, "", new { @class = "text-danger" })
                            </div>

                        </div>
                        <div class="col-xl-6">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "remark", autocomplete = "off" } })
                                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div id="UTRdiv" style='display:none;'>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Transaction Date</label>
                                    @Html.EditorFor(model => model.TransactionDate, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "TransactionChequeDate", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.TransactionDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Customer Detail</label>
                                    @Html.EditorFor(model => model.CustomerDetail, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "CustomerDetailBankName", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.CustomerDetail, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">UTR Number</label>
                                    @Html.EditorFor(model => model.UTRNo, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "remark", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.UTRNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            @*<div class="col-xl-6">
                                    <div class="form-group row">
                                        <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Proof Uplaod</label>
                                        <div class="col-lg-6 col-md-9 col-sm-12">
                                            <div class="image-input image-input-empty image-input-outline" id="kt_image_5" style="background-image: url(/Content/dist/assets/media/users/blank.png)">
                                                @if (Model.ProofUTRUpload != null)
                                                {
                                                    <div class="image-input-wrapper" style="background-image: url('/UserImages/@Model.ProofUTRfilename')"></div>
                                                }
                                                else
                                                {
                                                    <div class="image-input-wrapper" style="background-image: url(/Content/dist/assets/media/users/blank.png)"></div>
                                                }

                                                <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change avatar">
                                                    <i class="fa fa-pen icon-sm text-muted"></i>
                                                    <input type="file" name="ProofImageFile" accept=".png, .jpg, .jpeg" />
                                                    <input type="hidden" name="profile_avatar_remove" />
                                                </label>

                                                <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                                                    <i class="ki ki-bold-close icon-xs text-muted"></i>
                                                </span>

                                                <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="remove" data-toggle="tooltip" title="Remove avatar">
                                                    <i class="ki ki-bold-close icon-xs text-muted"></i>
                                                </span>
                                            </div>

                                        </div>
                                    </div>
                                </div>*@
                        </div>
                    </div>


                    <div id="Chequediv" style='display:none;'>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Cheque Date</label>
                                    @Html.EditorFor(model => model.ChequeDate, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "TransactionChequeDate", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.ChequeDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Bank Name</label>
                                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "CustomerDetailBankName", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Cheque Number</label>
                                    @Html.EditorFor(model => model.ChequeNo, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "UTRChequeNo", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.ChequeNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Bank Branch</label>
                                    @Html.EditorFor(model => model.BankBranch, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "BankBranch", autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.BankBranch, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        @*<div class="row">
                                <div class="col-xl-6">
                                    <div class="form-group row">
                                        <label class="font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12">Proof Uplaod</label>
                                        <div class="col-lg-6 col-md-9 col-sm-12">
                                            <div class="image-input image-input-empty image-input-outline" id="kt_image_5" style="background-image: url(/Content/dist/assets/media/users/blank.png)">
                                                @if (Model.ProofUpload != null)
                                                {
                                                    <div class="image-input-wrapper" style="background-image: url('/UserImages/@Model.Prooffilename')"></div>
                                                }
                                                else
                                                {
                                                    <div class="image-input-wrapper" style="background-image: url(/Content/dist/assets/media/users/blank.png)"></div>
                                                }

                                                <label class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="change" data-toggle="tooltip" title="" data-original-title="Change avatar">
                                                    <i class="fa fa-pen icon-sm text-muted"></i>
                                                    <input type="file" name="ProofImageFile" accept=".png, .jpg, .jpeg" />
                                                    <input type="hidden" name="profile_avatar_remove" />
                                                </label>

                                                <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="cancel" data-toggle="tooltip" title="Cancel avatar">
                                                    <i class="ki ki-bold-close icon-xs text-muted"></i>
                                                </span>

                                                <span class="btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow" data-action="remove" data-toggle="tooltip" title="Remove avatar">
                                                    <i class="ki ki-bold-close icon-xs text-muted"></i>
                                                </span>
                                            </div>

                                        </div>
                                    </div>
                                </div>
                            </div>*@
                    </div>


                    <!--end::Wizard Step 1-->
                    <!--begin::Wizard Actions-->
                    <div class="d-flex border-top mt-5 pt-10">
                        <input type="submit" id="btnSubmit" value="Pay Now" name="btnSubmit" class="btn btn-primary font-weight-bold text-uppercase px-9 py-4" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                        <a href="javascript:void(0);" id="backLink" class="btn btn-danger font-weight-bold text-uppercase px-9 py-4">Back</a>
                    </div>
                    <!--end::Wizard Actions-->
                    @*</form>*@
                }

                <!--end::Wizard Form-->
                <!--end: Datatable-->
            </div>
        </div>
        <!--end::Card-->
    </div>



    <script src="/Content/dist/assets/plugins/global/plugins.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/js/scripts.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/js/pages/crud/forms/validation/form-controls.min.js"></script>

    @*<script src="~/Content/dist/assets/js/pages/features/miscellaneous/sweetalert2.min.js"></script>*@
    <script type="text/javascript">
        $(document).on('click', '#backLink', function () {
            history.go(-1);
        });
    </script>
    <script type="text/javascript">
        $('#slct').select2({
            placeholder: "Select Mode of Payment",
            allowClear: true
        });

        $('#slct').on('change', function () {
            if (this.value == '3') {
                $("#Chequediv").show();
            }
            else {
                $("#Chequediv").hide();
            }
        });
        $('#paidamount').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g))
                return false;
        });
        $('#discount').keypress(function (e) {
            var charCode = (e.which) ? e.which : event.keyCode
            if (String.fromCharCode(charCode).match(/[^0-9]/g))
                return false;
        });

        $('#paidamount').on('change', function () {
            if (parseFloat($("#paidamount").val()) > $('#BalanceAmount').val()) {
                Swal.fire("Oops!", "Your paid amount should not be greater than balance Amount.", "error");
                $("#btnSubmit").prop('disabled', true);
            }
            else {
                $("#btnSubmit").prop('disabled', false);
            }
        });

        $('#discount').on('change', function () {
            debugger;
            var discount = parseFloat($('#discount').val());
            var totalfeeamount = $("#TotalFees").val();
            var totalpaidamount = $("#TotalPaidFees").val();
            var afterdiscountfees = totalfeeamount - discount;
            $('.totalFeesClass').html(parseFloat(afterdiscountfees));
            var balanceAmountAfterDiscount = afterdiscountfees - totalpaidamount;
            $('.balanceamountClass').html(balanceAmountAfterDiscount);

            if (parseFloat($("#paidamount").val()) > $('#BalanceAmount').val()) {
                Swal.fire("Oops!", "Your paid amount should not be greater than balance Amount.", "error");
                $("#btnSubmit").prop('disabled', true);
            }
            else {
                $("#btnSubmit").prop('disabled', false);
            }
        });
    </script>


    @*<script type="text/javascript">
        history.pushState(null, null, location.href);
        window.onpopstate = function () {
            history.go(1);
        };
    </script>*@
</body>









<!--end::Body-->
</html>


