@model IMS.Models.InstituteModel

@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<!--begin::Head-->
<head>
    
    <link href="/Content/dist/assets/css/pages/wizard/wizard-1.css?v=7.0.4" rel="stylesheet" type="text/css">
   <style>
       .required::after {
            content: " *";
            font-weight: bold;
            color: red;
        }
   </style>
    
</head>
<!--end::Head-->
<body>
    <div class="subheader py-1 py-lg-2 subheader-transparent" id="kt_subheader">
        <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-1">
                <!--begin::Page Heading-->
                <div class="d-flex align-items-baseline mr-5">
                    <!--begin::Page Title-->
                    <h5 class="text-dark font-weight-bold my-2 mr-5">Profile</h5>
                    <!--end::Page Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                        <li class="breadcrumb-item">
                            <a href="" class="text-muted">Change Password</a>
                        </li>

                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page Heading-->
            </div>
            <!--end::Info-->

        </div>
    </div>
    <div class="container">
        <!--begin::Profile Personal Information-->
        <div class="d-flex flex-row">
            <!--begin::Aside-->
            @{Html.RenderAction("AsideMenuOfProfile", "Institute");}
            <!--end::Aside-->
            <!--begin::Content-->
            <div class="flex-row-fluid ml-lg-8">
                <!--begin::Card-->
                <div class="card card-custom card-stretch">
                    @using (Html.BeginForm("ChangePassword", "Institute", FormMethod.Post, new { @class = "form", role = "form", id = "kt_form", enctype = "multipart/form-data" }))
                    {

                        <div class="card-header py-3">
                            <div class="card-title align-items-start flex-column">
                                <h3 class="card-label font-weight-bolder text-dark">Change Password</h3>
                                <span class="text-muted font-weight-bold font-size-sm mt-1">Change your password</span>
                            </div>

                        </div>

                        <div class="card-body">
                           
                            <!--end::Alert-->
                            <div class="form-group row">
                                <label class="col-xl-3 col-lg-3 col-form-label text-alert required">Current Password</label>
                                <div class="col-lg-9 col-xl-6">
                                    @Html.EditorFor(model => model.CurrentPassword, new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "Currentpassword", placeholder = "Current password", required = "required", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-xl-3 col-lg-3 col-form-label text-alert required">New Password</label>
                                <div class="col-lg-9 col-xl-6">
                                    @Html.EditorFor(model => model.NewPassword, new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "Newpassword", placeholder = "New password", required = "required", autocomplete = "off" })
                                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger", @id = "newPwdError" })

                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-xl-3 col-lg-3 col-form-label text-alert required">Confirm Password</label>
                                <div class="col-lg-9 col-xl-6">
                                    @Html.EditorFor(model => model.VerifyPassword, new { @class = "form-control col-lg-6 col-md-9 col-sm-12", @id = "VerifyPassword", placeholder = "Verify password", required = "required", autocomplete = "off" })  @*//, onChange = "checkPasswordMatch();"*@
                                    @Html.ValidationMessageFor(model => model.VerifyPassword, "", new { @class = "text-danger", @id = "ConfirmPwdError" })
                                </div>

                            </div>


                            <div class="d-flex justify-content-between border-top mt-5 pt-10">
                                <div>
                                    <button type="submit" id="btnSubmit" value="" name="btnSubmit" class="btn btn-success font-weight-bold text-uppercase px-9 py-4 mr-2">Save Changes</button>
                                    <a href="@Url.Action("","")" id="backLink" class="btn btn-bg-danger font-weight-bold text-uppercase px-9 py-4">Cancel</a>
                                </div>
                            </div>

                        </div>


                    }



                    <!--end::Content-->
                </div>
                <!--end::Profile Personal Information-->
            </div>
            <!--end::Container-->
        </div>
        <!--end::Entry-->
    </div>

   
    <script src="/Content/dist/assets/plugins/global/plugins.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/js/scripts.bundle.js?v=7.0.4"></script>
  
    <script src="/Content/dist/assets/js/pages/widgets.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/js/pages/custom/profile/profile.js?v=7.0.4"></script>
  
    <script>
        $("input").addClass("form-control col-lg-6 col-md-9 col-sm-12");

        function checkConfirmPasswordMatch() {
            var password = $("#NewPassword").val();
            var confirmPassword = $("#VerifyPassword").val();
            if (password != confirmPassword) {
                $("#ConfirmPwdError").attr("class", "text-danger");
                $("#ConfirmPwdError").html("Passwords do not match!");
            }
            else {
                $("#ConfirmPwdError").attr("class", "text-success");
                $("#ConfirmPwdError").html("Passwords match.");
            }

        }


        function checkNewPasswordMatch() {
            var password = $("#CurrentPassword").val();
            var newPassword = $("#NewPassword").val();
            if (password == newPassword) {
                $("#newPwdError").html("Current Password and new Password should not be same!");
            }
            else {
                $("#newPwdError").html("");
            }

        }


        // $("#NewPassword, #VerifyPassword").keyup(checkPasswordMatch);
        $(document).ready(function () {
            $("#VerifyPassword").keyup(checkConfirmPasswordMatch);

            $("#NewPassword").keyup(checkNewPasswordMatch);
        });
    </script>

    <script type="text/javascript">
        $("#CurrentPassword").change(function () {
            var password = $("#CurrentPassword").val();
            $.ajax({
                type: "POST",
                url: "/Institute/ExistOrNot",
                data: '{password: "' + password + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    var message = $("#message");
                    if (response) {
                        Swal.fire("ok!", "valid", "success");
                    }
                    else {
                        Swal.fire("Oops!", "Password is Invalid", "error");
                    }
                }
            });
        });
    </script>



    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                @Html.Raw(TempData["Message"]);
            });
        </script>
        TempData["Message"] = null;
    }
</body>

