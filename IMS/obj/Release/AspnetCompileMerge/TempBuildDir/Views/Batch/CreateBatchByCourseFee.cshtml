@model IMS.Models.BatchModel
@{
    ViewBag.Title = "CreateBatchByCourseFee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html lang="en">
<!--begin::Head-->
<head>

    <!--begin::Global Theme Styles(used by all pages)-->
    <link href="/Content/dist/assets/plugins/global/plugins.bundle.css?v=7.0.4" rel="stylesheet" type="text/css">
    <link href="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.css?v=7.0.4" rel="stylesheet" type="text/css">
    <link href="/Content/dist/assets/css/style.bundle.css?v=7.0.4" rel="stylesheet" type="text/css">
    <style>
        .required::after {
            content: " *";
            font-weight: bold;
            color: red;
        }
    </style>
</head>
<!--end::Head--><!--end::Head-->
<!--begin::Body-->

<body id="kt_body" class="header-fixed header-mobile-fixed subheader-enabled page-loading">
    <div class="subheader py-1 py-lg-2 subheader-transparent" id="kt_subheader">
        <div class="container d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap">
            <!--begin::Info-->
            <div class="d-flex align-items-center flex-wrap mr-1">
                <!--begin::Page Heading-->
                <div class="d-flex align-items-baseline mr-5">
                    <!--begin::Page Title-->
                    <h5 class="text-dark font-weight-bold my-2 mr-5">Course Fee</h5>
                    <!--end::Page Title-->
                    <!--begin::Breadcrumb-->
                    <ul class="breadcrumb breadcrumb-transparent breadcrumb-dot font-weight-bold p-0 my-2 font-size-sm">
                        <li class="breadcrumb-item">
                            <a class="text-muted">Batch</a>
                        </li>
                    </ul>
                    <!--end::Breadcrumb-->
                </div>
                <!--end::Page Heading-->
            </div>
            <!--end::Info-->

        </div>
    </div>

    <div class="d-flex flex-column flex-row-fluid wrapper" id="kt_wrapper">
        <!--begin::Container-->
        <div class="container">

            <!--begin::Card-->
            <div class="card">
                <div class="card-header flex-wrap border-0 pt-6 pb-0">
                    <div class="card-title">
                        <h3 class="card-label">
                            Add new batch
                        </h3>
                    </div>

                </div>
                <div class="card-body">
                    <!--begin: Datatable table table-bordered table-checkable dataTable no-footer -->
                    @using (Html.BeginForm("CreateByBatch", "Batch", FormMethod.Post, new { @id = "CreateForm" }))
                    {
                        @Html.AntiForgeryToken()
                        @*<form class="form" id="kt_form">*@
                        <!--begin::Wizard Step 1-->

                        <div class="row">
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                @Html.HiddenFor(model => model.InstituteId)
                                @Html.HiddenFor(model => model.CourseId)
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.CourseName, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.CourseName, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 firstdate", placeholder = "Enter Start date", @id = "coursename", @readonly="readonly" } })
                                    @Html.ValidationMessageFor(model => model.CourseName, "", new { @class = "text-danger" })

                                </div>
                                <!--end::Input-->
                            </div>

                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.DurationNames, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.DropDownListFor(model => model.DurationId, new SelectList(Model.DurationNames, "Value", "Text"), "--Select Course Type--", new { @class = "form-control col-lg-6 col-md-9 col-sm-12", id = "ddlduration", name = "ddlduration" })
                                    @Html.ValidationMessageFor(model => model.DurationNames, "", new { @class = "text-danger" })
                                </div>
                            </div>




                        </div>

                        <div class="row">
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                <div class="form-group row">

                                    @Html.LabelFor(model => model.Start_Date, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.Start_Date, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 firstdate", placeholder = "Enter Start date", id = "StartDate" } })
                                    @Html.ValidationMessageFor(model => model.Start_Date, "", new { @class = "text-danger" })

                                </div>
                                <!--end::Input-->
                            </div>
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.End_Date, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.End_Date, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12 seconddate", placeholder = "Enter end date (mm/dd/yyyy)", id = "EndDate" } })
                                    @Html.ValidationMessageFor(model => model.End_Date, "", new { @class = "text-danger" })
                                </div>
                                <!--end::Input-->
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                <div class="form-group row">

                                    @Html.LabelFor(model => model.BatchMonth, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.DropDownListFor(model => model.BatchMonth, (IEnumerable<SelectListItem>)ViewBag.Months, "--Select Month--", new { @class = "form-control col-lg-6 col-md-9 col-sm-12 select2", id = "batchmonth" })
                                    @Html.ValidationMessageFor(model => model.BatchMonth, "", new { @class = "text-danger" })

                                </div>
                                <!--end::Input-->
                            </div>
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.BatchYear, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.DropDownListFor(model => model.BatchYear, (IEnumerable<SelectListItem>)ViewBag.Years, "--Select Year--", new { @class = "form-control col-lg-6 col-md-9 col-sm-12 select2", id = "batchyear" })
                                    @Html.ValidationMessageFor(model => model.BatchYear, "", new { @class = "text-danger" })
                                </div>
                                <!--end::Input-->
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter Batch Name", id = "batchname", @autocomplete = "off-1" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                                <!--end::Input-->
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.AdmissionLast_Date, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12 required" })
                                    @Html.EditorFor(model => model.AdmissionLast_Date, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter Admission last date (mm/dd/yyyy)", id = "AdmissionDate" } })
                                    @Html.ValidationMessageFor(model => model.AdmissionLast_Date, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-xl-6">
                                <!--begin::Input-->
                                <div class="form-group row">

                                    @Html.LabelFor(model => model.InTakeCapacity, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.EditorFor(model => model.InTakeCapacity, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter InTake Capacity" } })
                                    @Html.ValidationMessageFor(model => model.InTakeCapacity, "", new { @class = "text-danger" })

                                </div>
                                <!--end::Input-->
                            </div>
                            <div class="col-xl-6">
                                <div class="form-group row">
                                    @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "font-size-h6 font-weight-bolder text-dark col-lg-3 col-sm-12" })
                                    @Html.EditorFor(model => model.Target, new { htmlAttributes = new { @class = "form-control col-lg-6 col-md-9 col-sm-12", placeholder = "Enter Target" } })
                                    @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <!--end::Wizard Step 1-->
                        <!--begin::Wizard Actions-->
                        <div class="d-flex justify-content-between border-top mt-5 pt-10">

                            <div>
                                <input type="submit" id="btnSubmit" value="Save" name="btnSubmit" class="btn btn-primary font-weight-bold text-uppercase px-9 py-4" />

                            </div>
                        </div>
                        <!--end::Wizard Actions-->
                        @*</form>*@
                    }

                   
                </div>
            </div>
            <!--end::Card-->
        </div>
        <!--end::Container-->

    </div>



    <script src="/Content/dist/assets/plugins/global/plugins.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/plugins/custom/prismjs/prismjs.bundle.js?v=7.0.4"></script>
    <script src="/Content/dist/assets/js/scripts.bundle.js?v=7.0.4"></script>
    @*<script src="/Content/dist/assets/plugins/custom/datatables/datatables.bundle.js?v=7.0.4"></script>*@
    <script>
        var KTFormControls = function () {

            // Private functions
            var _initDemo1 = function () {
                (FormValidation.formValidation(
                    document.getElementById('CreateForm'),
                    {
                        fields: {

                          

                            Name: {
                                validators: {
                                    notEmpty: {
                                        message: ' please check for Batch Name'
                                    }
                                }
                            },

                            Start_Date: {
                                validators: {
                                    notEmpty: {
                                        message: 'Start_Date is required'
                                    }
                                }
                            },
                            End_Date: {
                                validators: {
                                    notEmpty: {
                                        message: 'End_Date is required'
                                    }
                                }
                            },

                            AdmissionLast_Date: {
                                validators: {
                                    notEmpty: {
                                        message: 'AdmissionLast_Date is required'
                                    }
                                }
                            },

                            BatchMonth: {
                                validators: {
                                    notEmpty: {
                                        message: 'Batch Month is required'
                                    }
                                }
                            },
                            BatchYear: {
                                validators: {
                                    notEmpty: {
                                        message: 'Batch Year is required'
                                    }
                                }
                            },



                            DurationId: {
                                validators: {
                                    notEmpty: {
                                        message: 'Please select an Duration'
                                    }
                                }
                            },

                        },

                        plugins: { //Learn more: https://formvalidation.io/guide/plugins
                            trigger: new FormValidation.plugins.Trigger(),
                            // Bootstrap Framework Integration
                            bootstrap: new FormValidation.plugins.Bootstrap(),
                            // Validate fields when clicking the Submit button
                            submitButton: new FormValidation.plugins.SubmitButton(),
                            // Submit the form when all fields are valid
                            defaultSubmit: new FormValidation.plugins.DefaultSubmit(),
                        }
                    }
                ));
            }

            return {
                // public functions
                init: function () {
                    _initDemo1();

                }
            };
        }();

        jQuery(document).ready(function () {
            KTFormControls.init();

        });
    </script>

    @*<script src="/Content/dist/assets/js/pages/crud/forms/widgets/bootstrap-datepicker.js?v=7.0.4"></script>*@

    <script>
        $('#StartDate').datepicker({
            rtl: KTUtil.isRTL(),
            todayHighlight: true,
            orientation: "bottom left",
        });

        $('#EndDate').datepicker({
            rtl: KTUtil.isRTL(),
            todayHighlight: true,
            orientation: "bottom left"

        });

        $('#AdmissionDate').datepicker({
            rtl: KTUtil.isRTL(),
            todayHighlight: true,
            orientation: "bottom left"

        });

        $("#EndDate").change(function () {
            var startDate = document.getElementById("StartDate").value;
            var endDate = document.getElementById("EndDate").value;

            if ((Date.parse(endDate) <= Date.parse(startDate))) {
                Swal.fire("Error", "End date should be greater than Start date", "error");
                document.getElementById("EndDate").value = "";
            }
        });

        $("#StartDate, #ddlduration").change(function () {
            var st = new Date($("#StartDate").val());
            var month = parseInt($("#ddlduration").val());
            $("#EndDate").val(st.getDate() + '/' + (new Date(st.setMonth(st.getMonth() + month)).getMonth() + 1) + '/' + st.getFullYear());
            $("#EndDate").datepicker("setDate", st);
        });

        $("#batchmonth, #batchyear").change(function (e) {
            //  e.preventDefault();
            var selectedcourse = $('#coursename').val();
            var selectedmonthname = $("#batchmonth option:selected").text();
            var selectedyear = $("#batchyear option:selected").text();

            var name = selectedcourse + '-' + selectedmonthname + '-' + selectedyear;
            $("#batchname").val(name);

            $.ajax({
                type: "POST",
                url: "/Batch/ExistOrNot",
                data: { batchname: $('#batchname').val(), instituteid: $('#InstituteId').val() },
                dataType: "JSON",
                success: function (response) {
                    if (response.d !== "0" || !isEmpty(response)) {
                        Swal.fire("Oops!", "Batch name " + $('#batchname').val() + " for course " + selectedcourse + " is already exists!", "error");
                        $("#btnSubmit").prop('disabled', true);
                        return false;
                    }
                },
                error: function () {
                    $('#btnSubmit').prop('disabled', false);
                }
            });


        });

       
        $('#ddlduration').select2({
            placeholder: "Select a Duration(In Months)",
            allowClear: true
        });
        $('#batchmonth').select2({
            placeholder: "Select a Month",
            allowClear: true
        });
        $('#batchyear').select2({
            placeholder: "Select a Year",
            allowClear: true
        });

        $("#CreateForm").submit(function (e) {
            e.preventDefault();
        });
    </script>
    <script src="/Content/dist/assets/js/pages/features/miscellaneous/sweetalert2.min.js"></script>
    @if (TempData["Message"] != null)
    {
        <script type="text/javascript">
            $(document).ready(function () {
                @Html.Raw(TempData["Message"]);
            });
        </script>
        TempData["Message"] = null;
    }
</body>
<!--end::Body-->
</html>
