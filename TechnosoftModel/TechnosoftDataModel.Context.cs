//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TechnosoftModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TECHNOSOFTSERVICESEntities : DbContext
    {
        public TECHNOSOFTSERVICESEntities()
            : base("name=TECHNOSOFTSERVICESEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<EWallet> EWallets { get; set; }
        public virtual DbSet<EWalletTransation> EWalletTransations { get; set; }
        public virtual DbSet<MenuMaster> MenuMasters { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<SubscriptionService> SubscriptionServices { get; set; }
        public virtual DbSet<UserMenuAccess> UserMenuAccesses { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vendor> Vendors { get; set; }
        public virtual DbSet<Institute> Institutes { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<City> Cities { get; set; }
        public virtual DbSet<Configuration> Configurations { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<Designation> Designations { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<Duration> Durations { get; set; }
        public virtual DbSet<exceptionlog> exceptionlogs { get; set; }
        public virtual DbSet<IdentityProof> IdentityProofs { get; set; }
        public virtual DbSet<InformationSource> InformationSources { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<PurchasedSerivce> PurchasedSerivces { get; set; }
        public virtual DbSet<Qualification> Qualifications { get; set; }
        public virtual DbSet<ShareAmount> ShareAmounts { get; set; }
        public virtual DbSet<ShareDesignation> ShareDesignations { get; set; }
        public virtual DbSet<ShareType> ShareTypes { get; set; }
        public virtual DbSet<Suburb> Suburbs { get; set; }
        public virtual DbSet<Taluka> Talukas { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Religion> Religions { get; set; }
        public virtual DbSet<PaytmPaymentResponse> PaytmPaymentResponses { get; set; }
        public virtual DbSet<RazorPayment> RazorPayments { get; set; }
        public virtual DbSet<Branch> Branches { get; set; }
        public virtual DbSet<Admission> Admissions { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<ComboCourseSubject> ComboCourseSubjects { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<CourseFee> CourseFees { get; set; }
        public virtual DbSet<CourseFeeStructure> CourseFeeStructures { get; set; }
        public virtual DbSet<CourseSubject> CourseSubjects { get; set; }
        public virtual DbSet<CourseType> CourseTypes { get; set; }
        public virtual DbSet<Enquiry> Enquiries { get; set; }
        public virtual DbSet<FeeReceipt> FeeReceipts { get; set; }
        public virtual DbSet<FeesFollowupHistory> FeesFollowupHistories { get; set; }
        public virtual DbSet<FeeStructure> FeeStructures { get; set; }
        public virtual DbSet<FollowupHistory> FollowupHistories { get; set; }
        public virtual DbSet<ReasonOfRejection> ReasonOfRejections { get; set; }
        public virtual DbSet<Slot> Slots { get; set; }
        public virtual DbSet<SlotStudent> SlotStudents { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<StudentAttendance> StudentAttendances { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<InstituteFollowupHistory> InstituteFollowupHistories { get; set; }
    
        public virtual ObjectResult<AllEOIDetailsByInstituteid_Result> GetAllEOIDetailsByInstituteid(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllEOIDetailsByInstituteid_Result>("GetAllEOIDetailsByInstituteid", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<FEES_REPORT_BY_BATCHID_Result> GET_FEES_REPORT_BY_BATCHID(Nullable<int> cOURSEID, Nullable<int> bATCHID)
        {
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var bATCHIDParameter = bATCHID.HasValue ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FEES_REPORT_BY_BATCHID_Result>("GET_FEES_REPORT_BY_BATCHID", cOURSEIDParameter, bATCHIDParameter);
        }
    
        public virtual ObjectResult<AdmissionCountCoursewisebyInstituteid_Result> GetAdmissionCountCoursewisebyInstituteid(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmissionCountCoursewisebyInstituteid_Result>("GetAdmissionCountCoursewisebyInstituteid", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllActiveBatchesOfSubCourses_Result> GetAllActiveBatchesOfSubCourses(Nullable<int> iNSTITUTEID, Nullable<int> cOMBOCOURSEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var cOMBOCOURSEIDParameter = cOMBOCOURSEID.HasValue ?
                new ObjectParameter("COMBOCOURSEID", cOMBOCOURSEID) :
                new ObjectParameter("COMBOCOURSEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllActiveBatchesOfSubCourses_Result>("GetAllActiveBatchesOfSubCourses", iNSTITUTEIDParameter, cOMBOCOURSEIDParameter);
        }
    
        public virtual ObjectResult<AllAdmissionOfStudentByInstituteId_Result> GetAllAdmissionOfStudentByInstituteId(Nullable<int> iNSTITUTEID, Nullable<int> sTUDENTID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var sTUDENTIDParameter = sTUDENTID.HasValue ?
                new ObjectParameter("STUDENTID", sTUDENTID) :
                new ObjectParameter("STUDENTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllAdmissionOfStudentByInstituteId_Result>("GetAllAdmissionOfStudentByInstituteId", iNSTITUTEIDParameter, sTUDENTIDParameter);
        }
    
        public virtual ObjectResult<AllBatchesByInstituteId_Result> GetAllBatchesByInstituteId(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllBatchesByInstituteId_Result>("GetAllBatchesByInstituteId", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllComboCourses_Result> GetAllComboCourses(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllComboCourses_Result>("GetAllComboCourses", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllCourseFeesByInstituteId_Result> GetAllCourseFeesByInstituteId(Nullable<int> iNSTITUTEID, Nullable<int> cOURSEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllCourseFeesByInstituteId_Result>("GetAllCourseFeesByInstituteId", iNSTITUTEIDParameter, cOURSEIDParameter);
        }
    
        public virtual ObjectResult<AllCoursesByInstituteId_Result> GetAllCoursesByInstituteId(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllCoursesByInstituteId_Result>("GetAllCoursesByInstituteId", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllEnquiriesByInstituteId_Result> GetAllEnquiriesByInstituteId(Nullable<int> iNSTITUTEID, Nullable<int> sTUDENTID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var sTUDENTIDParameter = sTUDENTID.HasValue ?
                new ObjectParameter("STUDENTID", sTUDENTID) :
                new ObjectParameter("STUDENTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllEnquiriesByInstituteId_Result>("GetAllEnquiriesByInstituteId", iNSTITUTEIDParameter, sTUDENTIDParameter);
        }
    
        public virtual ObjectResult<AllEnquiriesOfStudentByInstituteId_Result> GetAllEnquiriesOfStudentByInstituteId(Nullable<int> iNSTITUTEID, Nullable<int> sTUDENTID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var sTUDENTIDParameter = sTUDENTID.HasValue ?
                new ObjectParameter("STUDENTID", sTUDENTID) :
                new ObjectParameter("STUDENTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllEnquiriesOfStudentByInstituteId_Result>("GetAllEnquiriesOfStudentByInstituteId", iNSTITUTEIDParameter, sTUDENTIDParameter);
        }
    
        public virtual ObjectResult<AllEnquiryFollowupReportByInstituteId_Result> GetAllEnquiryFollowupReportByInstituteId(Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE, Nullable<int> cOURSEID, Nullable<int> iNSTITUTEID)
        {
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllEnquiryFollowupReportByInstituteId_Result>("GetAllEnquiryFollowupReportByInstituteId", fROMDATEParameter, tODATEParameter, cOURSEIDParameter, iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllOverdueEnquiriesForFollowup_Result> GetAllOverdueEnquiriesForFollowup(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllOverdueEnquiriesForFollowup_Result>("GetAllOverdueEnquiriesForFollowup", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllOverdueFeesForFollowup_Result> GetAllOverdueFeesForFollowup(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllOverdueFeesForFollowup_Result>("GetAllOverdueFeesForFollowup", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllPendingEnquiresByInstituteid_Result> GetAllPendingEnquiresByInstituteid(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllPendingEnquiresByInstituteid_Result>("GetAllPendingEnquiresByInstituteid", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllPendingFeesForFollowup_Result> GetAllPendingFeesForFollowup(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllPendingFeesForFollowup_Result>("GetAllPendingFeesForFollowup", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllStudentByInstituteId_Result> GetAllStudentByInstituteId(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllStudentByInstituteId_Result>("GetAllStudentByInstituteId", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AllTodaysFeesForFollowup_Result> GetAllTodaysFeesForFollowup(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AllTodaysFeesForFollowup_Result>("GetAllTodaysFeesForFollowup", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<BatchByCourseId_InstituteId_Result> GetBatchByCourseId_InstituteId(Nullable<int> cOURSEID, Nullable<int> iNSTITUTEID)
        {
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchByCourseId_InstituteId_Result>("GetBatchByCourseId_InstituteId", cOURSEIDParameter, iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<BatchesDetails_Batchid_InstituteId_Result> GetBatchesDetails_Batchid_InstituteId(Nullable<int> iNSTITUTEID, string bATCHNAME)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var bATCHNAMEParameter = bATCHNAME != null ?
                new ObjectParameter("BATCHNAME", bATCHNAME) :
                new ObjectParameter("BATCHNAME", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchesDetails_Batchid_InstituteId_Result>("GetBatchesDetails_Batchid_InstituteId", iNSTITUTEIDParameter, bATCHNAMEParameter);
        }
    
        public virtual ObjectResult<COURSE_Result> GETCOURSE(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<COURSE_Result>("GETCOURSE", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<CourseFeeBy_Courseid_InstallmentMode_Result> GetCourseFeeBy_Courseid_InstallmentMode(Nullable<int> iNSTITUTEID, Nullable<int> cOURSEID, Nullable<int> iNSTALLMENTMODE)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var iNSTALLMENTMODEParameter = iNSTALLMENTMODE.HasValue ?
                new ObjectParameter("INSTALLMENTMODE", iNSTALLMENTMODE) :
                new ObjectParameter("INSTALLMENTMODE", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CourseFeeBy_Courseid_InstallmentMode_Result>("GetCourseFeeBy_Courseid_InstallmentMode", iNSTITUTEIDParameter, cOURSEIDParameter, iNSTALLMENTMODEParameter);
        }
    
        public virtual ObjectResult<CoursewiseStudentCount_PieChart_Result> GetCoursewiseStudentCount_PieChart(Nullable<int> iNSTITUTEID, Nullable<int> yEAR)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CoursewiseStudentCount_PieChart_Result>("GetCoursewiseStudentCount_PieChart", iNSTITUTEIDParameter, yEARParameter);
        }
    
        public virtual ObjectResult<DataForPrintReceipt_studentId_batchId_Result> GetDataForPrintReceipt_studentId_batchId(Nullable<int> iNSTITUTEID, Nullable<int> sTUDENTID, Nullable<int> bATCHID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var sTUDENTIDParameter = sTUDENTID.HasValue ?
                new ObjectParameter("STUDENTID", sTUDENTID) :
                new ObjectParameter("STUDENTID", typeof(int));
    
            var bATCHIDParameter = bATCHID.HasValue ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DataForPrintReceipt_studentId_batchId_Result>("GetDataForPrintReceipt_studentId_batchId", iNSTITUTEIDParameter, sTUDENTIDParameter, bATCHIDParameter);
        }
    
        public virtual ObjectResult<FeesFollowupReportByBatch_Result> GetFeesFollowupReportByBatch(Nullable<int> cOURSEID, Nullable<int> bATCHID, Nullable<int> iNSTITUTEID)
        {
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var bATCHIDParameter = bATCHID.HasValue ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(int));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FeesFollowupReportByBatch_Result>("GetFeesFollowupReportByBatch", cOURSEIDParameter, bATCHIDParameter, iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<FollowupofStudent_enquiryid_instituteid_Result> GetFollowupofStudent_enquiryid_instituteid(Nullable<int> eNQUIRYID, Nullable<int> iNSTITUTEID)
        {
            var eNQUIRYIDParameter = eNQUIRYID.HasValue ?
                new ObjectParameter("ENQUIRYID", eNQUIRYID) :
                new ObjectParameter("ENQUIRYID", typeof(int));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FollowupofStudent_enquiryid_instituteid_Result>("GetFollowupofStudent_enquiryid_instituteid", eNQUIRYIDParameter, iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<StudentFeesFollowupBy_Admissionid_Result> GetStudentFeesFollowupBy_Admissionid(Nullable<int> aDMISSIONID, Nullable<int> iNSTITUTEID)
        {
            var aDMISSIONIDParameter = aDMISSIONID.HasValue ?
                new ObjectParameter("ADMISSIONID", aDMISSIONID) :
                new ObjectParameter("ADMISSIONID", typeof(int));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentFeesFollowupBy_Admissionid_Result>("GetStudentFeesFollowupBy_Admissionid", aDMISSIONIDParameter, iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<StudentFeesReceiptBy_Courseid_batchid_Result> GetStudentFeesReceiptBy_Courseid_batchid(Nullable<int> cOURSEID, Nullable<int> bATCHID, Nullable<int> iNSTITUTEID)
        {
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var bATCHIDParameter = bATCHID.HasValue ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(int));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentFeesReceiptBy_Courseid_batchid_Result>("GetStudentFeesReceiptBy_Courseid_batchid", cOURSEIDParameter, bATCHIDParameter, iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<StudentForEditById_Result> GetStudentForEditById(Nullable<int> iNSTITUTEID, Nullable<int> sTUDENTID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var sTUDENTIDParameter = sTUDENTID.HasValue ?
                new ObjectParameter("STUDENTID", sTUDENTID) :
                new ObjectParameter("STUDENTID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentForEditById_Result>("GetStudentForEditById", iNSTITUTEIDParameter, sTUDENTIDParameter);
        }
    
        public virtual ObjectResult<StudentListForAdmissionDetailsByInstituteId_Result> GetStudentListForAdmissionDetailsByInstituteId(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentListForAdmissionDetailsByInstituteId_Result>("GetStudentListForAdmissionDetailsByInstituteId", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<StudentListForEnquiryDetailsByInstituteId_Result> GetStudentListForEnquiryDetailsByInstituteId(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<StudentListForEnquiryDetailsByInstituteId_Result>("GetStudentListForEnquiryDetailsByInstituteId", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<SubcoursesOfCombo_Result> GetSubcoursesOfCombo(Nullable<int> iNSTITUTEID, Nullable<int> cOMBOCOURSEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var cOMBOCOURSEIDParameter = cOMBOCOURSEID.HasValue ?
                new ObjectParameter("COMBOCOURSEID", cOMBOCOURSEID) :
                new ObjectParameter("COMBOCOURSEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SubcoursesOfCombo_Result>("GetSubcoursesOfCombo", iNSTITUTEIDParameter, cOMBOCOURSEIDParameter);
        }
    
        public virtual ObjectResult<TodaysBirthdaylist_Result> GetTodaysBirthdaylist(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodaysBirthdaylist_Result>("GetTodaysBirthdaylist", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<TodaysEnquiryFollowupList_Result> GetTodaysEnquiryFollowupList(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodaysEnquiryFollowupList_Result>("GetTodaysEnquiryFollowupList", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<TodaysFeesForFollowup_Result> GetTodaysFeesForFollowup(Nullable<int> iNSTITUTEID)
        {
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TodaysFeesForFollowup_Result>("GetTodaysFeesForFollowup", iNSTITUTEIDParameter);
        }
    
        public virtual ObjectResult<AdmissionReport_FD_TD_Result> GetAdmissionReport_FD_TD(Nullable<System.DateTime> fROMDATE, Nullable<System.DateTime> tODATE, Nullable<int> iNSTITUTEID, Nullable<int> cOURSEID, Nullable<int> bATCHID)
        {
            var fROMDATEParameter = fROMDATE.HasValue ?
                new ObjectParameter("FROMDATE", fROMDATE) :
                new ObjectParameter("FROMDATE", typeof(System.DateTime));
    
            var tODATEParameter = tODATE.HasValue ?
                new ObjectParameter("TODATE", tODATE) :
                new ObjectParameter("TODATE", typeof(System.DateTime));
    
            var iNSTITUTEIDParameter = iNSTITUTEID.HasValue ?
                new ObjectParameter("INSTITUTEID", iNSTITUTEID) :
                new ObjectParameter("INSTITUTEID", typeof(int));
    
            var cOURSEIDParameter = cOURSEID.HasValue ?
                new ObjectParameter("COURSEID", cOURSEID) :
                new ObjectParameter("COURSEID", typeof(int));
    
            var bATCHIDParameter = bATCHID.HasValue ?
                new ObjectParameter("BATCHID", bATCHID) :
                new ObjectParameter("BATCHID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AdmissionReport_FD_TD_Result>("GetAdmissionReport_FD_TD", fROMDATEParameter, tODATEParameter, iNSTITUTEIDParameter, cOURSEIDParameter, bATCHIDParameter);
        }
    
        public virtual ObjectResult<InstituteDetails_All_Result> GET_InstituteDetails_All()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InstituteDetails_All_Result>("GET_InstituteDetails_All");
        }
    }
}
